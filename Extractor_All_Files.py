import os
import re
import json





# Define the sections you want to extract
section_titles = [
    "4.1", "4.1 Indicazioni terapeutiche",
    "4.2", "4.2 Posologia e modo di somministrazione",
    "4.3", "4.3 Controindicazioni",
    "4.4", "4.4 Avvertenze speciali e precauzioni per l‚Äôuso",
    "4.5", "4.5 Interazione con altri medicinali e altre forme d‚Äôinterazione",
    "4.6", "4.6 Fertilit√†, gravidanza e allattamento",
    "4.7", "4.7 Effetti sulla capacit√† di guidare veicoli e sull'uso di macchinari",
    "4.8", "4.8 Effetti indesiderati",
    "4.9", "4.9 Sovradosaggio",
    "6.2", "6.2 Incompatibilit√†"
]

# Just the section numbers as keys
short_keys = sorted(set([s.split()[0] for s in section_titles]), key=lambda x: (int(x.split('.')[0]), float(x.split('.')[1])))

# Regex to match section headers
titles_pattern = "|".join([re.escape(t) for t in section_titles])
section_regex = re.compile(rf"^({titles_pattern})\b.*", re.MULTILINE)

# Your AIC list
aic_list = [
    '43658032', '43658121', '36816015', '36816027', '44868026', '44868038', '44868014', '40915098', '40915163',
    '49818014', '49818038', '49818026', '49818040', '36582029', '36582031', '36582017', '36582094', '36582120',
    '36582183', '37350016', '37350028', '38038028', '38038016', '42292021', '42292033', '42292019', '36018149',
    '38736031', '38736056', '38736070', '38736094', '38736118', '38736132', '37856022', '42869014', '42869026',
    '39716182', '44155024', '39716170', '44155012', '47612027', '35987054', '38835144', '38835043', '43615057',
    '42403042', '43259035', '25767029', '25767017', '27230034', '27395021', '28614055', '28614081', '28614129',
    '32307011', '46032013', '46277012', '50312014', '28467037', '32307023', '33551021', '33731011', '34738031',
    '46032049', '46277036', '50312026', '28467064', '31846049', '32307086', '33429046', '33482047', '33551072',
    '33731050', '33868011', '34583031', '34738043', '36035018', '36110017', '46032052', '46277063', '50312038',
    '33672027', '31846025', '33482023', '28467049', '32307035', '33429022', '33551060', '33731035', '33868023',
    '34738056', '36035032', '42179010', '42180048', '42207011', '44822029', '46280018', '47065014', '48150015',
    '48958019', '49648013', '44520029', '44670014', '44520056', '44670026', '41256241', '41538048', '37514015',
    '37515018', '41256227', '41538024', '43119015', '45647029', '45647017', '45647031', '45381011', '45533041',
    '40274072', '45545062', '40274058', '45545047', '48957068', '40274019', '45545011', '48957017', '40274060',
    '45545050', '40274033', '45545023', '48957029', '40274045', '45545035', '48957043', '40007041', '40186013',
    '40191013', '40366039', '40655019', '40658015', '40833016', '42063178', '42419034', '42547012', '43305034',
    '43305061', '44760039', '33094018', '33090010', '33094020', '33090034', '33512017', '28366019', '28931018',
    '33512031', '28931032', '37839026', '38036087', '37839115', '38036240', '36334011', '36334023', '30779033',
    '29824051', '30779019', '29824048', '45236015', '44669012', '45348036', '42645046', '45354040', '49604010',
    '49452030', '49452016', '43143027', '36582207', '49297017', '49479013', '48401133', '50048038', '48749016',
    '49686090', '48401261', '49297029', '49298021', '49686052', '49755010', '50293012', '49475344', '49479025',
    '39399011', '43130032', '42505053', '42277018', '42333017', '42342016', '44733018', '42333043', '42337016',
    '41330022', '43198035', '37105018', '26533051', '26533048', '42448011', '22393058', '22393060', '22393045',
    '22393033', '22393084', '49573049', '49573025', '29033038', '29033040', '29033014', '29033026', '39398045',
    '39398019', '34357018', '44201010', '39701014', '27751078', '27751066', '35891011', '45267010', '36587020',
    '36587018', '47411018', '47411020', '21250028', '25728027', '36742017', '27666015', '27666039', '47416108',
    '47416110', '47416084', '47416122', '45902020', '45902018', '45903022', '45903010', '49432014', '49432026',
    '45317017', '45317070', '45317031', '24459137', '33586037', '22033029', '35462011', '38320014', '36966012',
    '36966051', '43978016', '43978081', '36766032', '36766044', '50291018', '34330047', '34330035', '26749010',
    '26749034', '45563018', '45609017', '46259014', '27113024', '27113012', '33403015', '46673012', '46991042',
    '36859015', '22391015', '22391039', '44703027', '44703015', '44703039', '47507013', '47507025', '49750019',
    '49750021', '29378027', '29378015', '47660055', '45061165', '47067032', '45061140', '47067018', '31118021',
    '31118019', '41800020', '41800018', '43671015', '42916027', '44379028', '42916015', '44379016', '44379030',
    '48163012', '38116024', '38116012', '28823021', '34436194', '36680027', '36680015', '48985016', '48985028',
    '49033018', '49033020', '49033044', '49033032', '49033057', '47497019', '47907011', '48209011', '48524019',
    '48609010', '48612016', '49936014', '50447010', '44273011', '41650019', '41650033', '41650021', '45613015',
    '42171090', '50644018', '45121050', '45121011', '44332068', '44333058', '44332029', '44333021'
]
  # <-- You can read this from a file too

# Path to the folder with all _all_pages.txt files
folder_path = "textFiles/A"  # üîÅ change this

# Final result container
result = {}
not_found = []
# Loop through AICs
for aic in aic_list[:1]:
    filename = os.path.join(folder_path, f"{aic}_all_pages.txt")
    if not os.path.isfile(filename):
        not_found.append(aic)
        continue  # skip if file doesn't exist

    # Read file
    with open(filename, "r", encoding="utf-8") as file:
        text = file.read()

    # Find all section headers
    matches = list(section_regex.finditer(text))

    # Extract content under each section
    sections = {}
    for i, match in enumerate(matches):
        full_title = match.group().strip()
        short_key = full_title.split()[0]
        start = match.start()
        end = matches[i + 1].start() if i + 1 < len(matches) else len(text)
        content = text[start:end].strip()
        sections[short_key] = content[:100]

    # Save result under AIC
    result[aic] = sections

# Output as JSON
print(json.dumps(result, indent=2, ensure_ascii=False))
print("Not found files:", not_found)
